# -*- coding: utf-8 -*-
"""2. Numpy Array

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1WLUDfHYi0_qEut1skkArwTqO5IljVdyx

# **Basics of NumPy Arrays**

NumPy stands for Numerical Python. It is a Python library used for working with an array. In Python, we use the list for the array but itâ€™s slow to process. NumPy array is a powerful N-dimensional array object and is used in linear algebra, Fourier transform, and random number capabilities. It provides an array object much faster than traditional Python lists.

Types of Array:
* One Dimensional Array
* Multi-Dimensional Array
"""

# prompt:

import numpy as np

# One Dimensional Array
one_dimensional_array = np.array([1, 2, 3, 4, 5])
print("One Dimensional Array:")
print(one_dimensional_array)

# Multi-Dimensional Array
multi_dimensional_array = np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]])
print("Multi-Dimensional Array:")
print(multi_dimensional_array)

"""# Numpy array from iterable  """

iterable = (a*a for a in range(5))
arr = np.fromiter(iterable, dtype=float)
print(arr)

string = "Google Colab"
arr = np.fromiter(string, "U2")
print(arr)

"""# Numpy Arrange and linspace function"""

# prompt:

# Numpy Arrange and linspace function

# Arrange function
print("Arrange function:")
arr = np.arange(0, 10, 2)
print(arr)

# Linspace function
print("Linspace function:")
arr = np.linspace(3.5, 10, 3)
print(arr)


arr = np.linspace(3.5, 10, 3, dtype=np.int32)
print(arr)

"""# Numpy empty, ones and zeros function"""

# prompt:

# Numpy empty, ones and zeros function

# Empty function
print("Empty function:")
arr = np.empty([3, 3])
print(arr)

# Ones function
print("Ones function:")
arr = np.ones([3, 3], dtype=np.int32)
print(arr)

# Zeros function
print("Zeros function:")
arr = np.zeros([3, 3], dtype=np.int32)
print(arr)

"""# Numpy Sort with axis function"""

# prompt:

# Numpy Sort with axis function
print("Sort with axis function:")
arr = np.array([[3, 1, 2], [4, 5, 6], [9, 8, 7]])
print("Original array:")
print(arr)
print("Sort along axis 0:")
print(np.sort(arr, axis=0))
print("Sort along axis 1:")
print(np.sort(arr, axis=1))
print("Sort along axis -1:")
print(np.sort(arr, axis=-1))

print("Sort along axis=None:")
print(np.sort(arr, axis=None))

"""# Numpy matrix multiplication"""

# prompt:

import numpy as np

# Create two matrices
matrix_a = np.array([[1, 2, 3], [4, 5, 6]])
matrix_b = np.array([[7, 8], [9, 10], [11, 12]])

# Perform matrix multiplication
result = np.matmul(matrix_a, matrix_b)

# Print the result
print("Matrix multiplication result:")
print(result)

"""# Newaxis function in numpy"""

arr = np.arange(3,6)
print(arr)
temp = arr[:, np.newaxis]
print(temp, temp.shape)
temp = arr[:, np.newaxis, np.newaxis]
print(temp, temp.shape)

# multiplication
arr[:, np.newaxis]*arr