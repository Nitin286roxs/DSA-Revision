# -*- coding: utf-8 -*-
"""3.Lambda Function

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1xk-iWhZqxGdjg9HTyWAlD91IB3SkrjML

# Upper function
"""

str1 = 'GeeksforGeeks'

upper = lambda string: string.upper()
print(upper(str1))

"""# cube function"""

lambda_cube = lambda x: x**3
print(lambda_cube(5))

"""# Condition Checking Using Python lambda function

"""

format_numeric = lambda num : f"{num:e}" if isinstance(num,int) else f"{num:,.2f}"
print(f"format_numeric(123456789) : {format_numeric(123456789)}")
print(f"format_numeric(123456789.12345) : {format_numeric(123456789.12345)}")

"""# Python Lambda Function with List Comprehension

"""

is_even_list = list(map(lambda x: x * 10 ,[x for x in range(1, 5)]))
for item in is_even_list:
    print(item)

is_even_list = [lambda arg=x: arg * 10 for x in range(1, 5)]
for item in is_even_list:
    print(item())

"""# Python Lambda Function with if-else

"""

Max = lambda a, b : a if(a > b) else b
print(Max(1, 2))

"""# Python Lambda with Multiple Statements

"""

List = [[2,3,4],[1, 4, 16, 64],[3, 6, 9, 12]]
sortList = lambda x: (sorted(i) for i in x)
secondLargest = lambda x, f : [y[len(y)-2] for y in f(x)]
res = secondLargest(List, sortList)
print(res)

"""# Filter"""

li = [5, 7, 22, 97, 54, 62, 77, 23, 73, 61]

final_list = list(filter(lambda x: (x % 2 != 0), li))
print(final_list)

"""# Map"""

li = [5, 7, 22, 97, 54, 62, 77, 23, 73, 61]

final_list = list(map(lambda x: x*2, li))
print(final_list)

"""# Transform all elements of a list to upper case using lambda and map() function

"""

animals = ['dog', 'cat', 'parrot', 'rabbit']
uppered_animals = list(map(lambda animal: animal.upper(), animals))

print(uppered_animals)

"""# Reduce"""

from functools import reduce
li = [5, 8, 10, 20, 50, 100]
sum = reduce((lambda x, y: x + y), li)
print(sum)

#Find the maximum element in a list using lambda and reduce() function
import functools
lis = [1, 3, 5, 6, 2]
print("The maximum element of the list is : ", end="")
print(functools.reduce(lambda a, b: a if a > b else b, lis))